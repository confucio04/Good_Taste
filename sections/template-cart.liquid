<div id="cartProductContainer">
    <div class="cart-center">
        <h1 class="">Your cart</h1>
        <a href="{{ routes.all_products_collection_url }}" class="">Continue shopping</a>
    </div>
    {% if cart.item_count > 0 %}
        <div class="cart products__container">
            <form action="{{ routes.cart_url }}" method="POST" novalidate>
                {% for item in cart.items %}
                    <div class="cart-item"> <!--grid-->
                        <div class="cart-item__info"> 
                            <div class="mini__info"> 
                                <h3>Product</h3>
                                <a href="{{ item.url }}"> 
                                
                                <!--cambio-->
                                    {% if item.image %}
                                        <img src="{{ item.image | image_url: width: 250 }}" 
                                            alt="{{ item.title | escape }}" 
                                            class="w-20 h-20 object-cover border"
                                            loading="lazy"
                                            width="150"
                                            height="150">
                                    {% else %}
                                        {{ 'product-1' | placeholder_svg_tag: 'w-20 h-20 object-cover border' }}
                                    {% endif %}
                                </a>
                            </div>
                            <div class="cart-item__details">
                                <a href="{{ item.url }}" class="">{{ item.product.title | truncatewords: 5 }}</a>
                                <span class="">{{ item.variant.title }}</span>
                                <p>{{ item.line_price | money }}</p>
                            </div>
                        </div>
                        <div class="cart-item__quantity">
                            <h3>Quanty</h3>
                            <div class="quantity-container">
                                <button class="quantity-button decrement" onclick="updateQuantity({{ forloop.index }}, -1)">-</button>
                                <input type="number" name="updates[]" id="updates_{{ forloop.index }}" value="{{ item.quantity }}" min="0" class="quantity-input">
                                <button class="quantity-button increment" onclick="updateQuantity({{ forloop.index }}, 1)">+</button>
                            </div> 
                            <a href="{{ routes.cart_change_url }}?line={{ forloop.index }}&quantity=0" class="text-sm font-medium text-red-500 my-1">remove</a>
                        </div>
                         
                            
                           
    
                    </div>
                {% endfor %}            
           
        </div> 
                <div class="">
                    <h3>Estimed Total: {{ cart.total_price | money }}</h3>
                    <p class="text-xl"> Discount applied checkout</p>             
                </div>  
                <div class="my-2">
                    <button type="submit" name="checkout" class="checkout-button">Checkout</button>
                </div>
            </form>
                
        {% else %}
        <div class="">
            <div class="text-center">
                <h1 class="">Your cart is empty</h1>
                <div class="">
                    <a href="{{ routes.all_products_collection_url }}" class="">Continue shopping</a>
                </div>
            </div>
        </div>
    {% endif %}
</div>








<script>

    function updateQuantity(index, change) {
        var quantityInput = document.getElementById("updates_" + index);
        var newQuantity = parseInt(quantityInput.value) + change;

        // Asegúrate de que la cantidad no sea negativa
        newQuantity = Math.max(newQuantity, 0);

        quantityInput.value = newQuantity;
    }

    document.addEventListener("DOMContentLoaded", function () {
        var addedProduct = localStorage.getItem("addedProduct");

        if (addedProduct) {
            addedProduct = JSON.parse(addedProduct);

            var cartProductContainer = document.getElementById("cartProductContainer");

            if (cartProductContainer) {
                cartProductContainer.innerHTML = `
                    
                        <div class="product-img">
                            <img src="${addedProduct.image}" alt="${addedProduct.title}" style="object-fit: contain;"> <!-- Ajusta el ancho según tus necesidades -->
                        </div>
                        <div class="product-content">
                            <h2>${addedProduct.title}</h2>
                            <p>${addedProduct.description}</p>
                            <p>$${(addedProduct.price / 100).toFixed(2)}</p> <!-- Divide por 100 y usa toFixed para mostrar dos decimales -->
                            <form id="updateForm" action="/cart/update" method="post">
                                <input type="hidden" name="id" value="${addedProduct.id}">
                                <label for="quantity">Quantity</label>
                                <div class="price">  
                                    <input type="number" name="quantity" id="quantity" value="${addedProduct.quantity}" min="1">
                                    <button type="submit">Update</button>
                                </div>
                            </form>
                            <a href="/checkout" id="goToCheckout" class="checkout-btn">Checkout</a>
                        </div>
                   
                `;
            }

            localStorage.removeItem("addedProduct");

            // Verificar si el carrito está vacío antes de redirigir al checkout
            var goToCheckoutLink = document.getElementById("goToCheckout");
            if (goToCheckoutLink) {
                goToCheckoutLink.addEventListener("click", function (event) {
                    var cartIsEmpty = addedProduct.quantity === 0; // Puedes ajustar esta lógica según tus necesidades

                    if (cartIsEmpty) {
                        alert("El carrito está vacío. Agrega productos antes de proceder al checkout.");
                        event.preventDefault(); // Evita que se realice la redirección
                    }
                });
            }

            // Agrega el evento de submit al formulario de actualización
            var updateForm = document.getElementById("updateForm");
            if (updateForm) {
                updateForm.addEventListener("submit", function (event) {
                    // Puedes agregar lógica adicional antes de enviar el formulario si es necesario
                    // Por ejemplo, verificar si la cantidad es válida
                });
            }
        }
    });
</script>

<style>
   

    .cart {
        display: flex;
        flex-direction: column;
      }
      
      .cart-item {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(min(306px, 100%), 1fr));
        gap: 20px;
        margin-bottom: 20px;
      }
      
      
      
      .my-2 {
        margin-top: 10px;
        margin-bottom: 10px;
      }

    /* Estilo general del carrito */
    .cart-container {
        max-width: 6xl;
        margin: 10px auto;
        padding: 4px;
    }

    /* Estilo de la cabecera del carrito */
    .cart-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 5px;
    }

    /* Estilo de la tabla del carrito */
    .cart-table {
        width: 100%;
        border-collapse: collapse;
        margin: 4px 0;
    }

    /* Estilo de las celdas de la tabla del carrito */
    .cart-cell {
        padding: 4px 2px;
    }

    /* Estilo de la imagen del producto */
    .product-image {
        width: 20px;
        height: 20px;
        object-fit: cover;
        border: 1px solid #ccc;
    }

    /* Estilo del enlace de eliminación del producto */
    .remove-link {
        color: #ff0000;
        font-weight: bold;
        text-decoration: none;
        margin-top: 2px;
        display: block;
    }

    /* Estilo del campo de cantidad */
    .quantity-input {
        width: 40px;
        text-align: center;
    }

    /* Estilo del área de notas del carrito */
    .cart-notes {
        width: 100%;
        max-width: 300px;
        margin-top: 4px;
        resize: none;
        border: 1px solid #ccc;
        padding: 4px;
    }

    /* Estilo del subtotal */
    .subtotal {
        font-size: 1.5rem;
        margin-top: 20px;
    }

    /* Estilo de los botones de actualización y pago */
    

    /* Estilo del enlace de continuar comprando */
    .continue-shopping {
        border: 1px solid #0069d9;
        color: #0069d9;
        background-color: #fff;
        padding: 8px;
        text-decoration: none;
        display: inline-block;
        margin-top: 10px;
    }

    /* Estilo del mensaje cuando el carrito está vacío */
    .empty-cart-message {
        max-width: 6xl;
        height: 60px;
        margin: 4px auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    /* Estilo del enlace de continuar comprando en el carrito vacío */
    .continue-shopping-empty {
        border: 1px solid #0069d9;
        color: #0069d9;
        background-color: #fff;
        padding: 8px;
        text-decoration: none;
        display: inline-block;
        margin-top: 10px;
    }

</style>





{% schema %}
{
    "name": "Template Cart",
    "blocks": [
        {
            "type": "subtotal",
            "name": "Subtotal",
            "limit": 1
        },
        {
            "type": "update_button",
            "name": "Update Button",
            "limit": 1
        },
        {
            "type": "checkout_button",
            "name": "Checkout Button",
            "limit": 1
        }
    ]
}
{% endschema %}